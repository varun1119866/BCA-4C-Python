Practical 5 Working with Lists in Python


5.1 WAP to show the creation and working of lists
# Creating a list
my_list = [1, 2, 3, 4, 5]
print("Initial list:", my_list)

# Accessing elements of a list
print("First element:", my_list[0])
print("Last element:", my_list[-1])

# Modifying elements of a list
my_list[2] = 30
print("List after modification:", my_list)

# Adding elements to a list
my_list.append(6)
print("List after appending 6:", my_list)

# Removing elements from a list
removed_element = my_list.pop(2)
print("Removed element:", removed_element)
print("List after removing element at index 2:", my_list)

# Slicing a list
print("First three elements:", my_list[:3])

# Length of a list
print("Length of the list:", len(my_list))

# Checking if an element is in the list
print("Is 5 in the list?", 5 in my_list)

# Iterating over a list
print("Elements of the list:")
for element in my_list:
    print(element)




5.2 WAP to print elements of a list[‘q’,’w’,’e’,’r’,’t’,’y’] in 3eparate lines along with element’s both indexes (Positive and Negative).
# Given list
my_list = ['q', 'w', 'e', 'r', 't', 'y']

# Print elements of the list along with their indexes
for i, elem in enumerate(my_list):
    print(f"Element '{elem}' at index {i} (Positive) and {i - len(my_list)} (Negative)")




5.3 WAP to demonstrate the working of methods used with lists
# Create a list
my_list = ['apple', 'banana', 'cherry', 'banana', 'orange']

# Original list
print("Original list:", my_list)

# Append: Add an element to the end of the list
my_list.append('kiwi')
print("List after appending 'kiwi':", my_list)

# Insert: Insert an element at a specific position
my_list.insert(2, 'grape')
print("List after inserting 'grape' at index 2:", my_list)

# Remove: Remove the first occurrence of a specified element
my_list.remove('banana')
print("List after removing the first occurrence of 'banana':", my_list)

# Pop: Remove and return the element at a specific position (default: last)
popped_element = my_list.pop(3)
print("Popped element at index 3:", popped_element)
print("List after popping element at index 3:", my_list)

# Index: Return the index of the first occurrence of a specified element
index_of_cherry = my_list.index('cherry')
print("Index of 'cherry':", index_of_cherry)

# Count: Return the number of occurrences of a specified element
count_of_banana = my_list.count('banana')
print("Count of 'banana':", count_of_banana)

# Reverse: Reverse the elements of the list in place
my_list.reverse()
print("List after reversing:", my_list)

# Sort: Sort the elements of the list in place (ascending order by default)
my_list.sort()
print("List after sorting in ascending order:", my_list)

# Extend: Add the elements of another list to the end of the list
another_list = ['pear', 'grapefruit']
my_list.extend(another_list)
print("List after extending with another_list:", my_list)




5.4 WAP to create a 3*3 Matrix and how to extract individual elements of the matrix
# Create a 3x3 matrix
matrix = [
    [1, 2, 3],
    [4, 5, 6],
    [7, 8, 9]
]

# Display the matrix
print("Matrix:")
for row in matrix:
    print(row)

# Extract individual elements of the matrix
print("\nIndividual elements:")
print("Element at (1, 1):", matrix[0][0])
print("Element at (1, 2):", matrix[0][1])
print("Element at (1, 3):", matrix[0][2])
print("Element at (2, 1):", matrix[1][0])
print("Element at (2, 2):", matrix[1][1])
print("Element at (2, 3):", matrix[1][2])
print("Element at (3, 1):", matrix[2][0])
print("Element at (3, 2):", matrix[2][1])
print("Element at (3, 3):", matrix[2][2])




5.5 WAP to demonstrate built-in functions in Lists
# Create a list
my_list = [3, 1, 4, 1, 5, 9, 2, 6, 5]

# Original list
print("Original list:", my_list)

# len(): Return the length of the list
print("Length of the list:", len(my_list))

# max(): Return the maximum element of the list
print("Maximum element of the list:", max(my_list))

# min(): Return the minimum element of the list
print("Minimum element of the list:", min(my_list))

# sum(): Return the sum of all elements in the list
print("Sum of all elements in the list:", sum(my_list))

# count(): Return the number of occurrences of a specified element
count_of_5 = my_list.count(5)
print("Count of '5' in the list:", count_of_5)

# index(): Return the index of the first occurrence of a specified element
index_of_9 = my_list.index(9)
print("Index of '9' in the list:", index_of_9)

# sorted(): Return a new sorted list
sorted_list = sorted(my_list)
print("Sorted list:", sorted_list)

# reverse(): Reverse the elements of the list in place
my_list.reverse()
print("List after reversing:", my_list)

# clear(): Remove all elements from the list
my_list.clear()
print("List after clearing:", my_list)




5.6 WAP to calculate the mean, variance and std. deviation of given list of numbers
import statistics

# Given list of numbers
numbers = [4, 7, 1, 9, 6, 5, 3, 8, 2]

# Calculate mean
mean = statistics.mean(numbers)

# Calculate variance
variance = statistics.variance(numbers)

# Calculate standard deviation
std_deviation = statistics.stdev(numbers)

# Display the results
print("Given list of numbers:", numbers)
print("Mean:", mean)
print("Variance:", variance)
print("Standard Deviation:", std_deviation)


